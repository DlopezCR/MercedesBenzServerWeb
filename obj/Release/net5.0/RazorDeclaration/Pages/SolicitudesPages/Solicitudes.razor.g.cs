// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MercedesBenzServerWeb.Pages.SolicitudesPages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using MercedesBenzServerWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using MercedesBenzServerWeb.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using MercedesBenzModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using MercedesBenzServerWeb.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\_Imports.razor"
using BlazorPro.Spinkit;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\Pages\SolicitudesPages\Solicitudes.razor"
using BlazorDateRangePicker;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/solicitudes/{estatus:int}")]
    public partial class Solicitudes : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 71 "E:\MERCEDES\MercedesBenzWeb\MercedesBenzServerWeb\Pages\SolicitudesPages\Solicitudes.razor"
       
    [CascadingParameter(Name = "RegistrosPagina")]
    protected int registrosPagina { get; set; }

    [Parameter] public int estatus { get; set; }

    private SolicitudEstatus solicitudEstatus { get; set; }
    private string titulo { get; set; }

    SolicitudEstatusRequest model = new();
    PaginacionRequest paginacion = new();
    RespuestaPaginada respuesta = null;
    private string mensaje = String.Empty;
    private bool isLoadingData = true;

    private int totalRegistros = 0;
    private int paginaActual = 1;
    private int paginasTotal = 0;

    DateRangePicker Picker;
    DateTime MinDate { get; set; } = new DateTime(2022, 01, 1);
    DateTime MaxDate { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1).AddMonths(1).AddDays(-1);
    private bool FechaCapturada { get; set; } = false;
    private bool ValidarFecha { get; set; } = false;

    protected override void OnInitialized()
    {
        registrosPagina = 4;
        solicitudEstatus = (SolicitudEstatus)estatus;
        switch (solicitudEstatus)
        {
            case SolicitudEstatus.Nuevas:
                titulo = "nuevas";
                break;
            case SolicitudEstatus.Proceso:
                titulo = "en proceso";
                break;
            case SolicitudEstatus.Finalizadas:
                titulo = "finalizadas";
                break;
        }
        model.Estatus = solicitudEstatus;
        model.FechaInicial = DateTime.Now.AddDays(-(DateTime.Now.Day - 1));
        model.FechaFinal = DateTime.Now;
        FechaCapturada = true;
        paginacion.Pagina = paginaActual;
        paginacion.RegistrosPagina = registrosPagina;
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Run(async () =>
            {
                await ConsultarDatos(paginaActual);
                if(respuesta == null)
                {
                    model.FechaFinal = model.FechaInicial.AddDays(-1);
                    model.FechaInicial = model.FechaInicial.AddMonths(-1);
                    await ConsultarDatos(paginaActual);
                }
                isLoadingData = false;
                await InvokeAsync(StateHasChanged);
            });
        }
    }

    private async Task OnSubmit()
    {
        bool IsData = false;

        if (FechaCapturada)
        {
            model.FechaInicial = new DateTime(Picker.StartDate.Value.Year, Picker.StartDate.Value.Month, Picker.StartDate.Value.Day, 0, 0, 0);
            model.FechaFinal = new DateTime(Picker.EndDate.Value.Year, Picker.EndDate.Value.Month, Picker.EndDate.Value.Day, 23, 59, 59);
            IsData = true;
        }
        if (IsData)
        {
            paginaActual = 1;
            await PaginaSeleccionada(paginaActual);
        }
        else
        {
            mensaje = "Debe ingresar la fecha inicial y la fecha final";
            respuesta = null;
        }
        return;
    }

    private async Task PaginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        isLoadingData = true;
        this.StateHasChanged();
        await ConsultarDatos(paginaActual);
        isLoadingData = false;
        this.StateHasChanged();
    }

    private async Task ConsultarDatos(int pagina = 1)
    {
        mensaje = "";
        model.FechaInicial = new DateTime(model.FechaInicial.Year, model.FechaInicial.Month, model.FechaInicial.Day, 00, 00, 00);
        model.FechaFinal = new DateTime(model.FechaFinal.Year, model.FechaFinal.Month, model.FechaFinal.Day, 23, 59, 59);
        paginacion.Pagina = pagina;
        (string mensajeResponse, RespuestaPaginada respuestaResponse) = await Service.GetSolicitudesEstatusAsync(model, paginacion);
        respuesta = respuestaResponse;
        if (respuesta == null)
        {
            if (string.IsNullOrEmpty(mensajeResponse) || mensajeResponse == "True")
                mensaje = "No se encontraron datos del per√≠odo ingresado";
            else
                mensaje = mensajeResponse;
        }
        else
        {
            totalRegistros = respuesta.TotalRegistros;
            paginasTotal = respuesta.TotalPaginas;
            mensaje = "";
        }
    }

    public void OnDatePickerOpened()
    {
        ValidarFecha = true;
    }

    public void OnDatePickerClosed()
    {
        if (ValidarFecha)
        {
            if (!string.IsNullOrEmpty(Picker.FormattedRange))
                FechaCapturada = true;
        }
    }

    public void OnRangeSelect(DateRange range)
    {
        model.FechaInicial = new DateTime(range.Start.Year, range.Start.Month, range.Start.Day, 0, 0, 0);
        model.FechaFinal = new DateTime(range.End.Year, range.End.Month, range.End.Day, 23, 59, 59);
    }

    void OnRangeChange(string value)
    {
        FechaCapturada = false;
        if (value == Picker.FormattedRange)
            FechaCapturada = true;
        ValidarFecha = false;
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Services.IPaqueteService Service { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private BusquedaRequest Busqueda { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserCredential Credential { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppState AppState { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JS { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
